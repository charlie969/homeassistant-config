---
# This automation simulates the use of the IKEA TRADFRI Remote control
# connected through ZHA.

blueprint:
  source_url: https://github.com/niro1987/homeassistant-config/blob/main/blueprints/automation/niro1987/zha_ikea_tradfri_5button_remote_custom.yaml

  name: ZHA - IKEA TRADFRI - 5 Button Remote - Custom Actions with Dimmer

  description: >-
    This automation simulates the use of the IKEA TRADFRI remote control
    connected through ZHA.

  domain: automation

  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: TRADFRI remote control
    power_short:
      name: Short Press - Power Button
      description: The action to perform on Short Press of the Power Button
      selector:
        action:
      default: []
    dimup_short:
      name: Short Press - Dim Up Button
      description: The action to perform on Short Press of the Dim Up Button
      selector:
        action:
      default: []
    dimdown_short:
      name: Short Press - Dim Down Button
      description: The action to perform on Short Press of the Dim Down Button
      selector:
        action:
      default: []
    colorup_short:
      name: Short Press - Color Up Button
      description: The action to perform on Short Press of the Color Up Button
      selector:
        action:
      default: []
    colordown_short:
      name: Short Press - Color Down Button
      description: The action to perform on Short Press of the Color Down Button
      selector:
        action:
      default: []
    power_long:
      name: Long Press - Power Button
      description: The action to perform on Long Press of the Power Button
      selector:
        action:
      default: []
    colorup_long:
      name: Long Press - Color Up Button
      description: The action to perform on Long Press of the Color Up Button
      selector:
        action:
      default: []
    colordown_long:
      name: Long Press - Color Down Button
      description: The action to perform on Long Press of the Color Down Button
      selector:
        action:
      default: []
    light:
      name: Dimmer Light
      description: Select the light entity you wish to control when long pressing the dimmer buttons.
      selector:
        entity:
          domain: light
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: milliseconds
          mode: slider
      default: 500      

mode: restart
max_exceeded: silent

variables:
  var_light: !input light
  var_speed: !input speed

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - choose:
      # Short-Press on the power button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "toggle" }}'
        sequence: !input power_short

      # Long-Press on the power button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_to_level_with_on_off" }}'
        sequence: !input power_long

      # Short-Press on the dim-up button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step_with_on_off" }}'
        sequence: !input dimup_short

      # Long-Press on the dim-up button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: !input speed

      # Short-Press on the dim-down button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step" }}'
        sequence: !input dimdown_short

      # Long-Press on the dim-down button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: -10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: !input speed

      # Short-Press on the color-up button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [256,13,0] }}"
        sequence: !input colorup_short

      # Long-Press on the color-up button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [3328,0] }}"
        sequence: !input colorup_long

      # Short-Press on the color-down button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [257,13,0] }}"
        sequence: !input colordown_short

      # Long-Press on the color-down button.
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [3329,0] }}"
        sequence: !input colordown_long

    # Any other event will cancel the repeat loops.
    default: []
